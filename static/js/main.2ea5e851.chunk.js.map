{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["yaml","require","App","React","useState","isOpen","setIsOpen","content","setContent","formData","setFormData","hideModal","onSubmit","e","safeDump","skipInvalid","fetch","then","response","json","schema","render","document","getElementById","id","Modal","show","onHide","Header","Title","Body","Footer","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"2MAKMA,EAAOC,EAAQ,KAmDNC,MAjDf,WAAgB,IAAD,EACeC,IAAMC,UAAS,GAD9B,mBACNC,EADM,KACEC,EADF,OAEiBH,IAAMC,SAAS,oBAFhC,mBAENG,EAFM,KAEGC,EAFH,OAGmBL,IAAMC,SAAS,IAHlC,mBAGNK,EAHM,KAGIC,EAHJ,KASPC,EAAY,WAChBL,GAAU,IAGNM,EAAW,SAAC,EAAcC,GAAO,IAAnBJ,EAAkB,EAAlBA,SAClBC,EAAYD,GACZD,EAAWR,EAAKc,SAASL,EAAU,CAAEM,aAAa,KATlDT,GAAU,IAuBZ,OAVAU,MAAM,eACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,iBACE,mCACE,cAAC,IAAD,CAAMD,OAAQA,EAAQR,SAAUA,EAAUH,SAAUA,MAEtDa,SAASC,eAAe,YAI5B,qCACE,qBAAKC,GAAG,OAAR,SACE,sDAEF,eAACC,EAAA,EAAD,CAAOC,KAAMrB,EAAQsB,OAAQhB,EAA7B,UACE,cAACc,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAMI,MAAP,8CAEF,cAACJ,EAAA,EAAMK,KAAP,UACE,8BAAMvB,MAER,eAACkB,EAAA,EAAMM,OAAP,WACE,wBAAQC,QAASrB,EAAjB,oBADF,IAC8C,sDCrCvCsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASpB,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,SAM1BU,M","file":"static/js/main.2ea5e851.chunk.js","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport Form from \"@rjsf/bootstrap-4\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst yaml = require(\"js-yaml\");\n\nfunction App() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [content, setContent] = React.useState(\"Transitioning...\");\n  const [formData, setFormData] = React.useState({});\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  const onSubmit = ({ formData }, e) => {\n    setFormData(formData);\n    setContent(yaml.safeDump(formData, { skipInvalid: true }));\n    showModal();\n  };\n\n  fetch(\"schema.json\")\n    .then((response) => response.json())\n    .then((schema) => {\n      render(\n        <>\n          <Form schema={schema} onSubmit={onSubmit} formData={formData} />\n        </>,\n        document.getElementById(\"form\")\n      );\n    });\n  return (\n    <>\n      <div id=\"form\">\n        <p> Loading schemas...</p>\n      </div>\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <Modal.Title>Device hardware configuration</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre>{content}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <button onClick={hideModal}>Cancel</button> <button> Save </button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}